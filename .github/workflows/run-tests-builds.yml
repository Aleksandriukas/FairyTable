name: Run tests and build
run-name: ${{ github.actor }} is running tests and builds on React Native "Fairy Table" application.
on: [push]
  # pull_request:
  #   branches:
  #     - master
  #     - development
jobs:
  run-test-build:
    runs-on: ubuntu-latest
    steps:
      - run: echo "The job was triggered by a ${{ github.event_name }} event."
      - run: echo "This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Check out branch code
        uses: actions/checkout@v4
      - run: echo "The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo "The workflow is now ready to test your code on the runner."
      - name: Install NPM dependencies
        run: npm install
      - run: echo "filename=test_$(date +'%Y-%m-%d_%H-%M').txt" >> $GITHUB_ENV
      - name: Run Unit/Integration tests and log results
        run: npm test > $filename
        continue-on-error: true
      - name: Upload test results
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.filename }}
          path: ${{ env.filename }}
      - name: Grant execute permission to gradlew
        run: chmod +x android/gradlew
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          distribution: "adopt"
          java-version: "17"
      - name: Build Android Release
        run: cd android && ./gradlew assembleRelease
      - name: Upload Build
        uses: actions/upload-artifact@v4
        with:
          name: release-android
          path: android/app/build/outputs/apk/release/app-release.apk
  my_android_job:
    runs-on: ubuntu-22.04 # Works also with self hosted runner supporting docker
    container:
      image: docker://fabernovel/android:api-29-v1.1.0

  steps:
    - name: Checkout
      uses: actions/checkout@v2.1.0

    - name: Ruby Setup
      uses: ruby/setup-ruby@v1
      with:
        bundler-cache: true
      env:
        ImageOS: ubuntu20

    - name: Gradle cache
      uses: actions/cache@v3
      with:
        path: |
          /root/.gradle/caches
          /root/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    - name: Fastlane
      run: bundle exec fastlane my_lane
  
  # run-emulator-build:
  #   runs-on: budtmo/docker-android:latest
  #   steps:
  #     - name: Run android command
  #       run: echo "no" | avdmanager create avd -n test -k "system-images;android-33;google_apis;x86_64" -f
  #     - name: install apk
  #       uses: actions/upload-artifact@v4
  #     - run: adb install android/app/build/outputs/apk/release/app-release.apk
  #     - name: run emulator  
  #       run: emulator -avd test -no-audio -no-window
  # deploy-emulator-docker:
  #   env:
  #     DOCKER_HOST: tcp://docker:2375/
  #     DOCKER_DRIVER: overlay2
  #   runs-on: docker
  #   steps:
  # #     - run: apk add --no-cache py-pip jq
  # #     - run: pip install awscli
  # #     - run: aws configure set region $AWS_DEFAULT_REGION
  #     - run: aws ecr get-login-password | docker login --username AWS --password-stdin $AWS_URL
  #         # retention-days: 3
